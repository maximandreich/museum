/* tslint:disable */
/* eslint-disable */
/**
 * Event API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    date?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    time?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    theme?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    cost?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    text?: string;
}

export function EventFromJSON(json: any): Event {
    return EventFromJSONTyped(json, false);
}

export function EventFromJSONTyped(json: any, ignoreDiscriminator: boolean): Event {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'time': !exists(json, 'time') ? undefined : json['time'],
        'theme': !exists(json, 'theme') ? undefined : json['theme'],
        'cost': !exists(json, 'cost') ? undefined : json['cost'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'text': !exists(json, 'text') ? undefined : json['text'],
    };
}

export function EventToJSON(value?: Event | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'date': value.date,
        'image': value.image,
        'time': value.time,
        'theme': value.theme,
        'cost': value.cost,
        'name': value.name,
        'text': value.text,
    };
}


